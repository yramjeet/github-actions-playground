name: Monorepo Qaulity
run-name: ${{ github.actor }} is testing out GitHub Actions üöÄ
on:
  push:
    branches: [main]
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  Explore-GitHub-Actions:
    runs-on: ubuntu-latest
    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."

      - name: Check out repository code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: List files in the repository
        run: |
          pwd
          ls
          echo "${{ github.event_name }}"
          echo "${{ github.event.pull_request.base.sha }}"
          echo "${{ github.event.pull_request.head.sha }}"
      
      - name: Get list of changed files
        id: changed-files
        run: |
          if [[ ${{ github.event_name }} == "pull_request" ]]; then
            base=${{ github.event.pull_request.base.sha }}
            head=${{ github.event.pull_request.head.sha }}
          else
            base=${{ github.event.before }}
            head=${{ github.event.after }}
          fi

          if [[ $(git diff $base $head package.json) ]]; then
            cd apps/
            changed_apps=("$(ls | tr '\n' ' ')") 
            echo "changed_apps=$changed_apps" >> $GITHUB_OUTPUT
            cd ../
          else
            git diff --name-only $base $head | {
              changed_apps=()
              while read filename; do
                if [[ $filename = "apps/"* ]] && [[ ! " ${changed_apps[*]} " =~ " ${filename} " ]]; then
                  changed_apps+=("$(echo $filename | cut -d/ -f2)")
                fi
              done
              echo "changed_apps=$changed_apps" >> $GITHUB_OUTPUT
            }

          fi
          
      - run: echo "${{ steps.changed-files.outputs.changed_apps }}"
      - run: |
          changed_apps=${{ steps.changed-files.outputs.changed_apps }}
          for app in "${changed_apps[@]}"; do
            echo $app
          done
      
      - run: echo "üçè This job's status is ${{ job.status }}."